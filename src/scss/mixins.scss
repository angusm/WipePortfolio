@import "breakpoints";

$standard-margin: 10px;

%standard-drop-shadow {
  filter: drop-shadow(0 1px 1px rgba(#000, .5));
}

@mixin standard-drop-shadow() {
  @extend %standard-drop-shadow;
}

@mixin breakpoint($media-query) {

  @if $media-query == $xl {
    @media (min-width: 1920px) {
      @content;
    }
  }

  @if $media-query == $l {
    @media (min-width: 1360px) {
      @content;
    }
  }

  @if $media-query == $m {
    @media (min-width: 1024px) {
      @content;
    }
    @media (orientation: landscape) {
      @content;
    }
  }

  @if $media-query == $s {
    @media (min-width: 720px) and (not min-resolution: 2dppx) {
      @content;
    }
  }

  @if $media-query == $ret {
    @media (min-resolution: 2dppx) {
      @content;
    }
  }

  @if $media-query == $landscape-ret {
    @media (min-width: 1024px) and (min-resolution: 2dppx) {
      @content;
    }
    @media (orientation: landscape) and (min-resolution: 2dppx) {
      @content;
    }
  }

  @if $media-query == $landscape-ret {

  }
}

@mixin component-style($component-names...) {
  @each $component-name in $component-names {
    #{$component-name} {
      @content;
    }
  }
}

%absolute-fill {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
}

@mixin absolute-fill() {
  @extend %absolute-fill;
}

@mixin absolute-position-square($size) {
  position: absolute;
  height: $size;
  left: (100% - $size) / 2;
  top: (100% - $size) / 2;
  width: $size;
}

@mixin flex-center() {
  align-items: center;
  display: flex;
  justify-content: center;
}

@mixin roboto-font() {
  font-family: 'Roboto', sans-serif;
}

$transition-time: .35s;

@mixin standard-transition() {
  transition: all $transition-time;
}

@mixin transition-delay() {
  transition-delay: $transition-time;
}